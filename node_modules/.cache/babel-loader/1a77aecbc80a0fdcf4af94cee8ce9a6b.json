{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lyd/Desktop/pockerdex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lyd/Desktop/pockerdex/src/components/pokemon/Pokemon.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nvar Pokemon =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pokemon, _Component);\n\n  function Pokemon() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Pokemon);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pokemon)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      pokemonIndex: \"\",\n      imageUrl: \"\",\n      types: [],\n      description: \"\",\n      stats: {\n        hp: \"\",\n        attack: \"\",\n        defense: \"\",\n        speed: \"\",\n        specialAttack: \"\",\n        specialDefense: \"\"\n      },\n      height: \"\",\n      weight: \"\",\n      eggGroups: \"\",\n      abilities: \"\",\n      genderRatioMale: \"\",\n      genderRatioFemale: \"\",\n      evs: \"\",\n      hatchSteps: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Pokemon, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var pokemonIndex, pokemonUrl, pokemonSpeciesUrl, pokemonRes, name, imageUrl, _ref, hp, attack, defense, speed, specialAttack, specialDefense, height, weight, types, abilities, evs;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                pokemonIndex = this.props.match.params.pokemonIndex; // set up urls for pokemon information\n\n                pokemonUrl = \"https://pokeapi.co/api/v2/pokemon/\".concat(pokemonIndex, \"/\");\n                pokemonSpeciesUrl = \"https://pokeapi.co/api/v2/pokemon-species/\".concat(pokemonIndex, \"/\"); // Get Pokemon information\n\n                _context.next = 5;\n                return axios.get(pokemonUrl);\n\n              case 5:\n                pokemonRes = _context.sent;\n                name = pokemonRes.data.name;\n                imageUrl = pokemonRes.data.sprites.front_default;\n                _ref = \"\", hp = _ref.hp, attack = _ref.attack, defense = _ref.defense, speed = _ref.speed, specialAttack = _ref.specialAttack, specialDefense = _ref.specialDefense;\n                pokemonRes.data.stats.map(function (stat) {\n                  switch (stat.stat.name) {\n                    case \"hp\":\n                      hp = stat[\"base_stat\"];\n                      break;\n\n                    case \"attack\":\n                      hp = stat[\"base_stat\"];\n                      break;\n\n                    case \"defense\":\n                      hp = stat[\"base_stat\"];\n                      break;\n\n                    case \"hp\":\n                      hp = stat[\"base_stat\"];\n                      break;\n\n                    case \"speed\":\n                      hp = stat[\"base_stat\"];\n                      break;\n\n                    case \"special-attack\":\n                      hp = stat[\"base_stat\"];\n                      break;\n\n                    case \"special-defense\":\n                      hp = stat[\"base_stat\"];\n                      break;\n                  }\n                }); // convert Decimeters to Feet.. The + 0.0001 * 100/ 100\n\n                height = Math.round((pokemonRes.data.height * 0.328084 + 0.0001) * 100) / 100; // convert to 1bs\n\n                weight = Math.round((pokemonRes.data.weight * 0.220462 + 0.0001) * 100) / 100;\n                console.log(\"types:\", pokemonRes.data.types.map(function (type) {\n                  return type.name;\n                }));\n                types = pokemonRes.data.types.map(function (type) {\n                  return type.name;\n                });\n                abilities = pokemonRes.data.abilities.map(function (ability) {\n                  return ability.ability.name.toLowerCase().split(\"-\").map(function (s) {\n                    return s.charAt(0).toUpperCase() + s.substring(1);\n                  }).join(\" \");\n                });\n                evs = pokemonRes.data.stats.filter(function (stat) {\n                  if (stat.effort > 0) {\n                    return true;\n                  }\n\n                  return false;\n                }).map(function (stat) {\n                  return \"\".concat(stat.effort, \" \").concat(stat.stat.name).toLowerCase().split(\"-\").map(function (s) {\n                    return s.charAt(0).toUpperCase() + s.substring(1);\n                  }).join(\" \");\n                }).join(\", \"); // Get Pokemon Description, Catch Rate, EggGroups, Gender Ratio, Hatch Steps\n\n                _context.next = 18;\n                return axios.get(pokemonSpeciesUrl).then(function (res) {\n                  var description = \"\";\n                  res.data.flavor_text_entries.some(function (flavor) {\n                    if (flavor.language.name === \"en\") {\n                      description = flavor.flavor_text;\n                      return;\n                    }\n                  });\n                  var femaleRate = res.data[\"gender_rate\"];\n                  var genderRatioFemale = 12.5 * femaleRate;\n                  var genderRatioMale = 12.5 * (8 - femaleRate);\n                  var catchRate = Math.round(100 / 250 * res.data[\"capture_rate\"]);\n                  var eggGroups = res.data[\"egg_groups\"].map(function (group) {\n                    return group.name.toLowerCase().split(\"-\").map(function (s) {\n                      return s.charAt(0).toUpperCase() + s.substring(1);\n                    }).join(\" \");\n                  }).join(\", \");\n                  var hatchSteps = 255 * (res.data[\"hatch_counter\"] + 1);\n\n                  _this2.setState({\n                    description: description,\n                    genderRatioFemale: genderRatioFemale,\n                    genderRatioMale: genderRatioMale,\n                    catchRate: catchRate,\n                    eggGroups: eggGroups,\n                    hatchSteps: hatchSteps\n                  });\n                });\n\n              case 18:\n                this.setState({\n                  imageUrl: imageUrl,\n                  pokemonIndex: pokemonIndex,\n                  name: name,\n                  types: types,\n                  stats: {\n                    hp: hp,\n                    attack: attack,\n                    defense: defense,\n                    speed: speed,\n                    specialAttack: specialAttack,\n                    specialDefense: specialDefense\n                  },\n                  height: height,\n                  weight: weight,\n                  abilities: abilities,\n                  evs: evs\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, this.state.name));\n    }\n  }]);\n\n  return Pokemon;\n}(Component);\n\nexport { Pokemon as default };","map":{"version":3,"sources":["/Users/lyd/Desktop/pockerdex/src/components/pokemon/Pokemon.jsx"],"names":["React","Component","axios","Pokemon","state","name","pokemonIndex","imageUrl","types","description","stats","hp","attack","defense","speed","specialAttack","specialDefense","height","weight","eggGroups","abilities","genderRatioMale","genderRatioFemale","evs","hatchSteps","props","match","params","pokemonUrl","pokemonSpeciesUrl","get","pokemonRes","data","sprites","front_default","map","stat","Math","round","console","log","type","ability","toLowerCase","split","s","charAt","toUpperCase","substring","join","filter","effort","then","res","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","catchRate","group","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Pokemon extends Component {\n  state = {\n    name: \"\",\n    pokemonIndex: \"\",\n    imageUrl: \"\",\n    types: [],\n    description: \"\",\n    stats: {\n      hp: \"\",\n      attack: \"\",\n      defense: \"\",\n      speed: \"\",\n      specialAttack: \"\",\n      specialDefense: \"\"\n    },\n    height: \"\",\n    weight: \"\",\n    eggGroups: \"\",\n    abilities: \"\",\n    genderRatioMale: \"\",\n    genderRatioFemale: \"\",\n    evs: \"\",\n    hatchSteps: \"\"\n  };\n\n  async componentDidMount() {\n    const { pokemonIndex } = this.props.match.params;\n    // set up urls for pokemon information\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n\n    // Get Pokemon information\n    const pokemonRes = await axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    let { hp, attack, defense, speed, specialAttack, specialDefense } = \"\";\n\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case \"hp\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"attack\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"defense\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"hp\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"speed\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"special-attack\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"special-defense\":\n          hp = stat[\"base_stat\"];\n          break;\n      }\n    });\n\n    // convert Decimeters to Feet.. The + 0.0001 * 100/ 100\n    const height =\n      Math.round((pokemonRes.data.height * 0.328084 + 0.0001) * 100) / 100;\n\n    // convert to 1bs\n    const weight =\n      Math.round((pokemonRes.data.weight * 0.220462 + 0.0001) * 100) / 100;\n\n    console.log(\"types:\", pokemonRes.data.types.map(type => type.name));\n    const types = pokemonRes.data.types.map(type => type.name);\n\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return ability.ability.name\n        .toLowerCase()\n        .split(\"-\")\n        .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(\" \");\n    });\n\n    const evs = pokemonRes.data.stats\n      .filter(stat => {\n        if (stat.effort > 0) {\n          return true;\n        }\n        return false;\n      })\n      .map(stat => {\n        return `${stat.effort} ${stat.stat.name}`\n          .toLowerCase()\n          .split(\"-\")\n          .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n          .join(\" \");\n      })\n      .join(\", \");\n\n    // Get Pokemon Description, Catch Rate, EggGroups, Gender Ratio, Hatch Steps\n    await axios.get(pokemonSpeciesUrl).then(res => {\n      let description = \"\";\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === \"en\") {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n\n      const femaleRate = res.data[\"gender_rate\"];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n\n      const catchRate = Math.round((100 / 250) * res.data[\"capture_rate\"]);\n\n      const eggGroups = res.data[\"egg_groups\"]\n        .map(group => {\n          return group.name\n            .toLowerCase()\n            .split(\"-\")\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join(\" \");\n        })\n        .join(\", \");\n\n      const hatchSteps = 255 * (res.data[\"hatch_counter\"] + 1);\n\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hatchSteps\n      });\n    });\n\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      types,\n      stats: {\n        hp,\n        attack,\n        defense,\n        speed,\n        specialAttack,\n        specialDefense\n      },\n      height,\n      weight,\n      abilities,\n      evs\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h1>{this.state.name}</h1>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}